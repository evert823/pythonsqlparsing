-- . SET ERROROUT STDOUT INSERT INTO VARIABLE . VARIABLE ( VARIABLE , VARIABLE , VARIABLE , VARIABLE , VARIABLE , VARIABLE ) SELECT VARIABLE . VARIABLE , VARIABLE , VARIABLE . VARIABLE , VARIABLE , VARIABLE , STRINGLITERAL FROM ( SELECT VARIABLE , VARIABLE FROM VARIABLE . VARIABLE WHERE VARIABLE = STRINGLITERAL AND VARIABLE = STRINGLITERAL ) VARIABLE ; 
. SET ERROROUT STDOUT INSERT INTO BASE_ANIMALS . tRABBIT_RUNS ( PROCESSNAME , RUN_USER , RUN_PROCESS_DATE , SESSION_ID , EXACT_TIME , FINISH_LOCATION ) SELECT T1 . key_nAME , USER , T1 . property_value , SESSION , CURRENT_TIMESTAMP , 'STARTED' FROM ( SELECT key_nAME , property_value FROM BASE_PROCESS . PROCESSPARAMETERS WHERE key_nAME = 'ANIMAL_PROCESSES' AND FIELD_NAME = 'RUN_PROCESS_DATE' ) T1 ; 
-- CREATE MULTISET VOLATILE TABLE VARIABLE AS ( SELECT VARIABLE AS VARIABLE FROM VARIABLE . VARIABLE WHERE VARIABLE = STRINGLITERAL AND VARIABLE = STRINGLITERAL ) WITH DATA PRIMARY INDEX ( VARIABLE ) ON COMMIT PRESERVE ROWS ; 
CREATE MULTISET VOLATILE TABLE vOURDATE AS ( SELECT property_value AS OurDate FROM BASE_PROCESS . PROCESSPARAMETERS WHERE key_nAME = 'ANIMAL_PROCESSES' AND field_name = 'RUN_PROCESS_DATE' ) WITH DATA PRIMARY INDEX ( OurDate ) ON COMMIT PRESERVE ROWS ; 
-- IF ERRORCODE < > NUMBERLITERAL THEN . GOTO VARIABLE ; 
IF ERRORCODE < > 0 THEN . GOTO Error_Exit ; 
-- COLLECT STATISTICS COLUMN ( VARIABLE ) ON VARIABLE ; 
COLLECT STATISTICS COLUMN ( OurDate ) ON vOurDate ; 
-- CREATE MULTISET VOLATILE TABLE VARIABLE AS ( SELECT VARIABLE AS VARIABLE , VARIABLE AS VARIABLE , VARIABLE AS VARIABLE FROM VARIABLE . VARIABLE WHERE VARIABLE = STRINGLITERAL AND VARIABLE = STRINGLITERAL ) WITH DATA PRIMARY INDEX ( VARIABLE ) ON COMMIT PRESERVE ROWS ; 
CREATE MULTISET VOLATILE TABLE vOURDATE2 AS ( SELECT property_value AS OurDate , yearnumber AS CurrentYEAR , monthnumber AS CurrentMONTH FROM BASE_PROCESS . PROCESSPARAMETERS WHERE key_nAME = 'ANIMAL_PROCESSES' AND field_name = 'RUN_PROCESS_DATE' ) WITH DATA PRIMARY INDEX ( OurDate ) ON COMMIT PRESERVE ROWS ; 
-- IF ERRORCODE < > NUMBERLITERAL THEN . GOTO VARIABLE ; 
IF ERRORCODE < > 0 THEN . GOTO Error_Exit ; 
-- COLLECT STATISTICS COLUMN ( VARIABLE ) , COLUMN ( VARIABLE ) , COLUMN ( VARIABLE ) ON VARIABLE ; 
COLLECT STATISTICS COLUMN ( OurDate ) , COLUMN ( currentyear ) , COLUMN ( currentmonth ) ON vOurDate2 ; 
-- CREATE MULTISET VOLATILE TABLE VARIABLE AS ( SELECT VARIABLE VARIABLE , VARIABLE , VARIABLE , VARIABLE FROM VARIABLE . VARIABLE , VARIABLE WHERE VARIABLE BETWEEN VARIABLE AND VARIABLE AND VARIABLE = STRINGLITERAL GROUP BY NUMBERLITERAL , NUMBERLITERAL , NUMBERLITERAL , NUMBERLITERAL ) WITH DATA PRIMARY INDEX ( VARIABLE ) ON COMMIT PRESERVE ROWS ; 
CREATE MULTISET VOLATILE TABLE VT_ABCDEFG AS ( SELECT MOUSE_ID MOUSEINSTANCE , CITY , FIRSTSEEN , LASTSEEN FROM BASE_CITIES . Saigon , vOurDate WHERE OurDate BETWEEN FIRST_RAIN_DATE AND LAST_RAIN_DATE AND NUMBEROFLEGS = 'Four legs' GROUP BY 1 , 2 , 3 , 4 ) WITH DATA PRIMARY INDEX ( MOUSE_ID ) ON COMMIT PRESERVE ROWS ; 
-- IF ERRORCODE < > NUMBERLITERAL THEN . GOTO VARIABLE ; 
IF ERRORCODE < > 0 THEN . GOTO Error_Exit ; 
-- INSERT INTO VARIABLE SELECT VARIABLE , VARIABLE , VARIABLE , VARIABLE FROM VARIABLE . VARIABLE , VARIABLE WHERE VARIABLE BETWEEN VARIABLE AND VARIABLE AND VARIABLE = NUMBERLITERAL GROUP BY NUMBERLITERAL , NUMBERLITERAL , NUMBERLITERAL , NUMBERLITERAL ; 
INSERT INTO VT_ABCDEFG SELECT CAT_ID , NEXTCITY , FIRSTSEEN , LASTSEEN FROM BASE_CITIES . CATS , vOurDate WHERE OurDate BETWEEN FIRST_RAIN_DATE AND LAST_RAIN_DATE AND MAXSPEED = 98.321 GROUP BY 1 , 2 , 3 , 4 ; 
-- IF ERRORCODE < > NUMBERLITERAL THEN . GOTO VARIABLE ; 
IF ERRORCODE < > 0 THEN . GOTO Error_Exit ; 
-- COLLECT STATISTICS COLUMN ( VARIABLE ) ON VARIABLE ; 
COLLECT STATISTICS COLUMN ( CAT_ID ) ON VT_ABCDEFG ; 
-- IF ERRORCODE < > NUMBERLITERAL THEN . GOTO VARIABLE ; 
IF ERRORCODE < > 0 THEN . GOTO Error_Exit ; 
-- CREATE MULTISET VOLATILE TABLE VARIABLE AS ( SELECT VARIABLE , VARIABLE , VARIABLE , VARIABLE , VARIABLE , VARIABLE FROM VARIABLE . VARIABLE , VARIABLE WHERE VARIABLE BETWEEN VARIABLE AND VARIABLE AND ( VARIABLE = STRINGLITERAL OR VARIABLE = VARIABLE ) AND VARIABLE VARIABLE ( STRINGLITERAL ) ) WITH DATA PRIMARY INDEX ( VARIABLE ) ON COMMIT PRESERVE ROWS ; 
CREATE MULTISET VOLATILE TABLE VT_MouseCapture_figures AS ( SELECT CaptureHousenumber , WHEATHER_FORECAST , TREE_NAME , TREE_HAS_LEAFSNO , TAXIDRIVER , BOAT_WEIGHT_TP_ID FROM BASE_CITIES . vMouseCapture_figures , vOurDate WHERE OurDate BETWEEN FIRST_RAIN_DATE AND LAST_RAIN_DATE AND ( TREE_NAME = '6TSGSF22H3' OR TREE_NAME = TREE_HAS_LEAFSNO ) AND TAXIDRIVER IN ( 'John''s Stapher' ) ) WITH DATA PRIMARY INDEX ( CaptureHousenumber ) ON COMMIT PRESERVE ROWS ; 
-- IF ERRORCODE < > NUMBERLITERAL THEN . GOTO VARIABLE ; 
IF ERRORCODE < > 0 THEN . GOTO Error_Exit ; 
-- COLLECT STATISTICS COLUMN ( VARIABLE ) ON VARIABLE ; 
COLLECT STATISTICS COLUMN ( CaptureHousenumber ) ON VT_MouseCapture_figures ; 
-- IF ERRORCODE < > NUMBERLITERAL THEN . GOTO VARIABLE ; 
IF ERRORCODE < > 0 THEN . GOTO Error_Exit ; 
-- VARIABLE TABLE VARIABLE ; 
DROP TABLE vOurDate ; 
-- INSERT INTO VARIABLE . VARIABLE ( VARIABLE , VARIABLE , VARIABLE , VARIABLE , VARIABLE , VARIABLE ) SELECT VARIABLE . VARIABLE , VARIABLE , VARIABLE . VARIABLE , VARIABLE , VARIABLE , STRINGLITERAL FROM ( SELECT VARIABLE , VARIABLE FROM VARIABLE . VARIABLE WHERE VARIABLE = STRINGLITERAL AND VARIABLE = STRINGLITERAL ) VARIABLE ; 
INSERT INTO BASE_ANIMALS . tRABBIT_RUNS ( PROCESSNAME , RUN_USER , RUN_PROCESS_DATE , SESSION_ID , EXACT_TIME , FINISH_LOCATION ) SELECT T2 . key_nAME , USER , T2 . property_value , SESSION , CURRENT_TIMESTAMP , 'END-SUCCESS' FROM ( SELECT key_nAME , property_value FROM BASE_PROCESS . PROCESSPARAMETERS WHERE key_nAME = 'ANIMAL_PROCESSES' AND FIELD_NAME = 'RUN_PROCESS_DATE' ) T2 ; 
-- . QUIT NUMBERLITERAL ; 
. QUIT 0 ; 
-- . LABEL VARIABLE ; 
. LABEL Error_Exit ; 
-- INSERT INTO VARIABLE . VARIABLE ( VARIABLE , VARIABLE , VARIABLE , VARIABLE , VARIABLE , VARIABLE ) SELECT VARIABLE . VARIABLE , VARIABLE , VARIABLE . VARIABLE , VARIABLE , VARIABLE , STRINGLITERAL FROM ( SELECT VARIABLE , VARIABLE FROM VARIABLE . VARIABLE WHERE VARIABLE = STRINGLITERAL AND VARIABLE = STRINGLITERAL ) VARIABLE ; 
INSERT INTO BASE_ANIMALS . tRABBIT_RUNS ( PROCESSNAME , RUN_USER , RUN_PROCESS_DATE , SESSION_ID , EXACT_TIME , FINISH_LOCATION ) SELECT T2 . key_nAME , USER , T2 . property_value , SESSION , CURRENT_TIMESTAMP , 'END-FAIL' FROM ( SELECT key_nAME , property_value FROM BASE_PROCESS . PROCESSPARAMETERS WHERE key_nAME = 'ANIMAL_PROCESSES' AND FIELD_NAME = 'RUN_PROCESS_DATE' ) T2 ; 
-- . QUIT NUMBERLITERAL ; 
. QUIT 9 ; 
